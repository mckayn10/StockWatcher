{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Icons/Arrow.js","components/StockCard/StockCard.js","Views/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","searchChange","addStock","inputValue","screenWidth","className","type","value","placeholder","id","onChange","onClick","Arrow","netVal","color","parseFloat","xmlns","viewBox","style","fill","d","StockCard","newStock","symbol","company","open","high","low","close","newOpen","toFixed","newHigh","newLow","newClose","percent","triangleHeight","top","lineGradient","backgroundImage","bgGradient","textColor","Home","state","searchField","searchedStock","stocksArr","width","height","updateDimensions","window","innerWidth","setState","update_width","update_height","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","onSearchChange","e","target","infoEP","nameEP","axios","get","then","stockInfo","nameInfo","dailyStockValue","data","date","Object","keys","stockObj","bestMatches","console","log","catch","err","alert","myStocksArr","this","map","stock","i","key","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ee5f5a5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.scss';\r\n\r\nconst SearchBar = ({\r\n    searchChange,\r\n    addStock,\r\n    inputValue,\r\n    screenWidth }) => {\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"Enter stock symbol\"\r\n                id=\"input\"\r\n                onChange={searchChange}\r\n\r\n            />\r\n            {screenWidth > 640 \r\n                ? <button onClick={addStock}> ADD STOCK </button>\r\n                : <button onClick={addStock}> ADD </button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nexport default function Arrow({ netVal, color }) {\r\n\r\n    const upArrow = () => {\r\n        return <svg\r\n            className=\"svg-arrow\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\"\r\n        >\r\n            <path\r\n                style={{ fill: color }}\r\n                d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\" />\r\n        </svg>\r\n    }\r\n\r\n    const downArrow = () => {\r\n        return <svg\r\n            className=\"svg-arrow\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\"\r\n        >\r\n            <path\r\n                style={{ fill: color }}\r\n                d=\"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\" />\r\n        </svg>\r\n    }\r\n\r\n    return (\r\n        parseFloat(netVal) >= 0\r\n            ? upArrow()\r\n            : downArrow()\r\n    )\r\n}","import React from 'react';\r\nimport './StockCard.scss';\r\nimport Arrow from '../Icons/Arrow';\r\n\r\nconst StockCard = ({ newStock }) => {\r\n\r\n    const {\r\n        symbol,\r\n        company,\r\n        open,\r\n        high,\r\n        low,\r\n        close } = newStock;\r\n\r\n    const newOpen = parseFloat(open).toFixed(2);\r\n    const newHigh = parseFloat(high).toFixed(2);\r\n    const newLow = parseFloat(low).toFixed(2);\r\n    const newClose = parseFloat(close).toFixed(2);\r\n\r\n    const netVal = (parseFloat(close) - parseFloat(open)).toFixed(2);\r\n    const percent = ((netVal / open) * 100).toFixed(2);\r\n\r\n    //styles\r\n    const posGrad = 'linear-gradient(white, #ffffff46)';\r\n    const negGrad = 'linear-gradient(#ffffff46, white)';\r\n    const grGrad = 'green-gradient';\r\n    const rdGrad = 'red-gradient';\r\n    const grText = 'green';\r\n    const rdText = 'red';\r\n    const triangleHeight = { top: `${94 - ((newClose - newLow) / (newHigh - newLow) * 100)}%` }\r\n    const lineGradient = { backgroundImage: parseFloat(netVal) >= 0 ? posGrad : negGrad }\r\n    const bgGradient = parseFloat(netVal) >= 0 ? grGrad : rdGrad;\r\n    const textColor = parseFloat(netVal) >= 0 ? grText : rdText;\r\n\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <div className=\"stock-card flex\">\r\n                <div className={`scale-wrapper ${bgGradient}`}>\r\n                    <div\r\n                        className=\"scale-graph\"\r\n                        style={lineGradient}\r\n                    >\r\n                        <div\r\n                            className=\"triangle\"\r\n                            style={triangleHeight}\r\n                        ></div>\r\n                    </div>\r\n                    <div className=\"scale-amounts\">\r\n                        <div> {newHigh} </div>\r\n                        <div> {newLow} </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"info-wrapper\">\r\n                    <div className=\"name-info\">\r\n                        <h2> {company} </h2>\r\n                        <h4> {symbol} </h4>\r\n                    </div>\r\n                    <div className=\"current-info flex\">\r\n                        <div>\r\n                            <h2> {newClose} </h2>\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <div className={`net-amount flex ${textColor}`}>\r\n                                <Arrow\r\n                                    netVal={netVal}\r\n                                    color={textColor}\r\n                                />\r\n                                <h5 className={textColor}> {netVal} </h5>\r\n                            </div>\r\n                            <h5 className={textColor}> &#40;{percent}%&#41; </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"daily-info flex\">\r\n                        <h5>\r\n                            Open\r\n                            <span className=\"blue-text\"> {newOpen} </span>\r\n                        </h5>\r\n                        <h5 className=\"high-amount\">\r\n                            High\r\n                             <span className=\"blue-text\"> {newHigh} </span>\r\n                        </h5>\r\n                        <h5>\r\n                            Low\r\n                            <span className=\"blue-text\"> {newLow} </span>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockCard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Home.scss';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport StockCard from '../../components/StockCard/StockCard';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        searchField: '',\r\n        searchedStock: {},\r\n        stocksArr: [],\r\n        width: 0,\r\n        height: 0,\r\n    }\r\n\r\n    // Calculate & Update state of new dimensions\r\n\r\n    updateDimensions = () => {\r\n        if (window.innerWidth < 500) {\r\n            this.setState({ width: 450, height: 102 });\r\n        } else {\r\n            let update_width = window.innerWidth;\r\n            let update_height = window.innerHeight;\r\n            this.setState({ width: update_width, height: update_height });\r\n        }\r\n    }\r\n\r\n    // Add Event Listener \r\n    componentDidMount = () => {\r\n        this.updateDimensions();\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    // Remove event listener\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({\r\n            searchField: e.target.value\r\n        })\r\n    }\r\n\r\n    addStock = () => {\r\n\r\n        const infoEP = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${this.state.searchField}&apikey=HY0JP87WH3PG17X6`\r\n        const nameEP = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${this.state.searchField}&apikey=HY0JP87WH3PG17X6`\r\n\r\n        axios.get(infoEP)\r\n            .then(stockInfo => {\r\n                axios.get(nameEP)\r\n                    .then(nameInfo => {\r\n\r\n                        const dailyStockValue = stockInfo.data['Time Series (Daily)']\r\n                        const date = Object.keys(stockInfo.data['Time Series (Daily)'])[0]\r\n                        const stockObj = dailyStockValue[`${date}`]\r\n\r\n                        const newStock = {\r\n                            symbol: nameInfo.data.bestMatches[0][\"1. symbol\"],\r\n                            company: nameInfo.data.bestMatches[0][\"2. name\"],\r\n                            open: stockObj[\"1. open\"],\r\n                            high: stockObj[\"2. high\"],\r\n                            low: stockObj[\"3. low\"],\r\n                            close: stockObj[\"4. close\"]\r\n                        }\r\n\r\n                        console.log(stockObj)\r\n\r\n                        this.setState({ \r\n                            searchedStock: newStock,\r\n                            stocksArr: [...this.state.stocksArr, newStock],\r\n                            searchField: \"\"\r\n                        })\r\n\r\n                    })\r\n                    .catch((err) => {\r\n                        alert(err, 'please enter a valid stock symbol or try again in 15 seconds')\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const myStocksArr = this.state.stocksArr.map((stock, i) => {\r\n            return <StockCard key={i} newStock={stock} />\r\n\r\n        })\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n                <h1> Stock Watcher </h1>\r\n                <SearchBar\r\n                    searchChange={this.onSearchChange}\r\n                    addStock={this.addStock}\r\n                    inputValue={this.state.searchField}\r\n                    screenWidth={this.state.width}\r\n                />\r\n                <div className=\"list-container flex\">\r\n                    {myStocksArr}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './Views/Home/Home';\r\nimport './Global.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}